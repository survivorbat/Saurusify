{"version":3,"sources":["components/Output.tsx","components/Input.tsx","App.tsx","index.tsx"],"names":["Output","_ref","output","react","className","rows","value","readOnly","Input","updateInput","_useState","useState","_useState2","Object","slicedToArray","input","setInput","onChange","e","newInput","target","wordCache","App","setOutput","Container","Row","Col","components_Input","update","split","map","w","index","console","log","cacheKey","concat","length","synonyms","synonymsArray","synonym","Math","floor","random","join","handleUpdate","components_Output","ReactDOM","render","react_default","a","createElement","StrictMode","src_App","document","getElementById"],"mappings":"wQAeeA,MATf,SAAAC,GAAmC,IAAjBC,EAAiBD,EAAjBC,OAChB,OACEC,EAAA,qBAAKC,UAAU,SACbD,EAAA,mCACAA,EAAA,0BAAUC,UAAU,eAAeC,KAAM,GAAIC,MAAOJ,EAAQK,UAAQ,MCkB3DC,MArBf,SAAAP,GAAuC,IAAtBQ,EAAsBR,EAAtBQ,YAAsBC,EACXC,mBAAS,IADEC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAC9BK,EAD8BH,EAAA,GACvBI,EADuBJ,EAAA,GAQrC,OACET,EAAA,qBAAKC,UAAU,SACbD,EAAA,iCACAA,EAAA,0BACEC,UAAU,eACVC,KAAM,GACNC,MAAOS,EACPE,SAAU,SAACC,GAAD,OAZMC,EAYcD,EAAEE,OAAOd,MAX3CU,EAASG,QACTV,EAAYU,GAFd,IAAsBA,OCFlBE,EAAoC,GAqD3BC,MAxBf,WAAe,IAAAZ,EACeC,mBAAS,IADxBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACNR,EADMU,EAAA,GACEW,EADFX,EAAA,GAGb,OACET,EAAA,cAACqB,EAAA,EAAD,KACErB,EAAA,cAACsB,EAAA,EAAD,KACEtB,EAAA,cAACuB,EAAA,EAAD,KACEvB,EAAA,qBAAKC,UAAU,mBACbD,EAAA,wCAINA,EAAA,cAACsB,EAAA,EAAD,KACEtB,EAAA,cAACuB,EAAA,EAAD,KACEvB,EAAA,cAACwB,EAAD,CAAOlB,YAAa,SAACmB,GAAD,OAzC9B,SAAsBb,EAAeQ,GAwBnCA,EAvBeR,EAAMc,MAAM,eAAeC,IAAI,SAACC,EAAGC,GAChDC,QAAQC,IAAIH,GACZ,IAAMI,EAAQ,GAAAC,OAAML,EAAN,KAAAK,OAAWJ,GACzB,GAAIX,EAAUc,GACZ,OAAOd,EAAUc,GAGnB,GAAIJ,EAAEM,QAAU,EACd,OAAON,EAGT,IAAMO,EAAWC,MAAkBR,GAEnC,GAAwB,IAApBO,EAASD,OACX,OAAON,EAGT,IAAMS,EAAUF,EAASG,KAAKC,MAAMD,KAAKE,SAAWL,EAASD,SAG7D,OADAhB,EAAUc,GAAYK,EACfA,IAGQI,KAAK,MAiBkBC,CAAajB,EAAQL,OAEvDpB,EAAA,cAACuB,EAAA,EAAD,KACEvB,EAAA,cAAC2C,EAAD,CAAQ5C,OAAQA,cChD1B6C,IAASC,OACPC,EAAAC,EAAAC,cAACF,EAAAC,EAAME,WAAP,KACEH,EAAAC,EAAAC,cAACE,EAAD,OAEFC,SAASC,eAAe","file":"static/js/main.6b535897.chunk.js","sourcesContent":["import * as React from 'react';\n\ninterface Props {\n  output: string;\n}\n\nfunction Output({ output }: Props) {\n  return (\n    <div className=\"panel\">\n      <h2>Harvest</h2>\n      <textarea className=\"form-control\" rows={10} value={output} readOnly />\n    </div>\n  );\n}\n\nexport default Output;\n","import * as React from 'react';\nimport { useState } from 'react';\n\ninterface Props {\n  updateInput: (input: string) => void;\n}\n\nfunction Input({ updateInput }: Props) {\n  const [input, setInput] = useState('');\n\n  function handleUpdate(newInput: string) {\n    setInput(newInput);\n    updateInput(newInput);\n  }\n\n  return (\n    <div className=\"panel\">\n      <h2>Input</h2>\n      <textarea\n        className=\"form-control\"\n        rows={10}\n        value={input}\n        onChange={(e) => handleUpdate(e.target.value)}\n      />\n    </div>\n  );\n}\n\nexport default Input;\n","import * as React from 'react';\nimport './App.css';\nimport { useState } from 'react';\nimport * as synonymsArray from 'synonyms-array';\nimport { Col, Container, Row } from 'react-bootstrap';\nimport Output from './components/Output';\nimport Input from './components/Input';\n\nconst wordCache: Record<string, string> = {};\n\nfunction handleUpdate(input: string, setOutput: (output: string) => void) {\n  const result = input.split(/\\b[^\\w']+\\b/).map((w, index) => {\n    console.log(w);\n    const cacheKey = `${w}_${index}`;\n    if (wordCache[cacheKey]) {\n      return wordCache[cacheKey];\n    }\n\n    if (w.length <= 3) {\n      return w;\n    }\n\n    const synonyms = synonymsArray.get(w);\n\n    if (synonyms.length === 0) {\n      return w;\n    }\n\n    const synonym = synonyms[Math.floor(Math.random() * synonyms.length)];\n\n    wordCache[cacheKey] = synonym;\n    return synonym;\n  });\n\n  setOutput(result.join(' '));\n}\n\nfunction App() {\n  const [output, setOutput] = useState('');\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <div className=\"title-container\">\n            <h1>Saurusify</h1>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Input updateInput={(update) => handleUpdate(update, setOutput)} />\n        </Col>\n        <Col>\n          <Output output={output} />\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}